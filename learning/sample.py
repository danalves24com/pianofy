#Load Library
import numpy as np
from sklearn.linear_model import LinearRegression
from matplotlib import pyplot
from array import *
from midiutil.MidiFile import MIDIFile
import random
import time as tiemp
from decimal import Decimal
from mido import *
import mido
import array
import re
from sklearn.datasets import make_circles
from matplotlib import pyplot
from pandas import DataFrame
#matrix = np.array([[1,2,3],[4,5,6]])
mat = input("file to learn from: ")
data = []
dur = []
mid = mido.MidiFile(mat)
cl = ""
ct = ""
for msg in mid.play():
    #print(msg)
    cl = str(msg)
    ct = str(msg)
    if 'note' in cl:
       cl=(cl.split("note=",1)[1])
       #print(int(cl[0:3]))
       data.append(int(cl[0:3]))    
       ct=(ct.split("time=",1)[1])
       #print(float(ct[0:6])*10)

       dur.append(float(ct[0:4])*10)    
    
    print("learning ...")


#print(data)   
#print(dur)    
#data = [76, 75, 76, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 74, 72, 45, 69, 72, 45, 52, 57, 52, 69, 60, 57, 60, 64, 64, 69, 71, 40, 69, 52, 71, 40, 56, 52, 64, 56, 68, 64, 71, 68, 71, 45, 72, 52, 45, 72, 57, 52, 57, 64, 76, 64, 75, 76, 75, 76, 75, 76, 76, 75, 71, 76, 74, 71, 72, 74, 69, 45, 72, 45, 52, 52, 57, 69, 60, 57, 60, 64, 64, 69, 69, 71, 40, 40, 52, 71, 52, 56, 64, 56, 72, 64, 72, 71, 71, 69, 45, 52, 69, 45, 52, 57, 76, 57, 75, 76, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 74, 72, 69, 45, 72, 45, 52, 57, 52, 69, 60, 57, 64, 60, 69, 64, 69, 71, 40, 40, 52, 52, 56, 71, 56, 64, 68, 64, 71, 68, 71, 72, 45, 45, 52, 72, 52, 57, 57, 64, 76, 64, 75, 76, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 72, 74, 69, 45, 72, 45, 52, 69, 57, 52, 57, 60, 64, 60, 69, 64, 69, 71, 40, 40, 52, 52, 71, 56, 56, 64, 72, 64, 72, 71, 71, 45, 69, 45, 52, 69, 57, 52, 57, 71, 72, 71, 74, 72, 76, 48, 74, 48, 55, 76, 60, 55, 67, 60, 77, 67, 76, 77, 74, 43, 76, 43, 55, 55, 74, 59, 59, 65, 76, 65, 74, 76, 72, 45, 74, 52, 45, 72, 57, 52, 64, 57, 74, 64, 74, 72, 71, 40, 72, 40, 52, 52, 71, 64, 64, 76, 76, 64, 64, 76, 76, 76, 76, 88, 88, 75, 75, 76, 76, 75, 76, 75, 75, 76, 76, 75, 75, 76, 75, 76, 76, 75, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 72, 74, 69, 45, 72, 45, 52, 69, 52, 57, 57, 60, 60, 64, 64, 69, 69, 71, 40, 40, 52, 52, 56, 71, 56, 64, 68, 64, 68, 71, 71, 72, 45, 45, 52, 72, 57, 52, 57, 64, 64, 76, 75, 76, 76, 75, 75, 76, 75, 76, 71, 76, 74, 71, 74, 72, 69, 45, 72, 52, 45, 52, 57, 69, 60, 57, 64, 60, 69, 64, 69, 40, 71, 40, 52, 52, 56, 71, 56, 64, 72, 64, 72, 71, 71, 45, 69, 52, 45, 52, 57, 69, 57, 72, 64, 60, 58, 64, 60, 72, 58, 65, 72, 60, 57, 65, 60, 57, 72, 67, 60, 64, 72, 55, 58, 72, 67, 60, 64, 58, 55, 65, 69, 65, 72, 53, 69, 57, 72, 53, 60, 57, 57, 60, 57, 60, 77, 57, 77, 60, 76, 76, 57, 76, 53, 58, 53, 76, 74, 62, 58, 58, 62, 74, 58, 82, 62, 82, 58, 62, 81, 81, 58, 81, 53, 64, 79, 53, 81, 77, 64, 58, 53, 55, 79, 53, 58, 55, 76, 64, 77, 64, 74, 55, 58, 53, 76, 74, 53, 58, 55, 72, 64, 64, 70, 53, 72, 53, 57, 70, 57, 69, 60, 69, 60, 57, 57, 70, 60, 69, 70, 69, 67, 60, 67, 69, 57, 70, 69, 57, 72, 53, 70, 53, 57, 60, 57, 57, 72, 60, 57, 74, 60, 60, 75, 57, 74, 57, 76, 52, 75, 57, 60, 57, 76, 52, 60, 76, 57, 57, 76, 50, 62, 77, 62, 69, 53, 50, 77, 55, 72, 53, 69, 55, 64, 64, 55, 72, 55, 74, 64, 72, 64, 74, 72, 71, 71, 72, 74, 55, 72, 65, 55, 65, 74, 71, 71, 72, 60, 64, 72, 79, 67, 79, 64, 60, 67, 79, 69, 79, 69, 79, 67, 65, 71, 79, 67, 65, 71, 79, 72, 67, 64, 79, 67, 64, 72, 79, 74, 62, 67, 79, 67, 62, 74, 79, 79, 64, 67, 60, 76, 79, 76, 67, 60, 64, 84, 79, 83, 84, 81, 57, 53, 83, 79, 81, 77, 79, 76, 57, 77, 53, 74, 59, 55, 76, 79, 74, 77, 79, 74, 77, 59, 74, 72, 60, 55, 72, 79, 67, 79, 60, 67, 79, 69, 79, 69, 79, 67, 65, 71, 79, 71, 67, 65, 79, 67, 72, 64, 79, 72, 79, 67, 64, 62, 74, 67, 79, 74, 62, 67, 79, 67, 76, 64, 60, 79, 79, 67, 76, 60, 64, 84, 79, 83, 84, 81, 53, 57, 83, 79, 81, 77, 79, 76, 77, 57, 59, 74, 55, 53, 76, 79, 74, 77, 79, 74, 77, 55, 59, 74, 76, 56, 59, 76, 77, 76, 77, 75, 76, 75, 76, 76, 71, 59, 71, 56, 76, 76, 75, 76, 75, 76, 71, 71, 76, 76, 75, 75, 76, 76, 71, 76, 71, 75, 76, 75, 76, 76, 71, 71, 76, 75, 76, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 75, 76, 75, 76, 76, 75, 71, 76, 74, 71, 74, 72, 69, 45, 72, 52, 45, 57, 52, 69, 60, 57, 64, 60, 64, 69, 69, 71, 40, 40, 52, 52, 56, 71, 64, 56, 68, 64, 71, 68, 71, 72, 45, 52, 45, 72, 57, 52, 64, 57, 64, 76, 75, 76, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 72, 74, 69, 45, 72, 45, 52, 69, 57, 52, 60, 57, 64, 60, 69, 64, 69, 71, 40, 40, 52, 71, 52, 56, 64, 56, 72, 64, 71, 72, 71, 69, 45, 45, 52, 69, 57, 52, 57, 71, 72, 71, 74, 72, 76, 48, 74, 55, 48, 60, 76, 55, 67, 60, 77, 67, 76, 77, 43, 74, 76, 43, 55, 55, 59, 74, 65, 59, 76, 65, 74, 76, 74, 72, 45, 52, 45, 57, 52, 72, 64, 57, 74, 64, 74, 72, 71, 40, 72, 40, 52, 64, 52, 71, 64, 64, 64, 76, 64, 76, 64, 76, 76, 76, 88, 76, 88, 75, 75, 76, 76, 75, 75, 76, 76, 75, 76, 75, 76, 75, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 71, 76, 74, 71, 72, 74, 69, 45, 72, 45, 52, 69, 57, 52, 57, 60, 60, 64, 64, 69, 69, 71, 40, 40, 52, 52, 56, 71, 56, 64, 68, 64, 71, 68, 71, 72, 45, 52, 45, 57, 52, 72, 64, 57, 64, 76, 75, 76, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 74, 72, 72, 69, 45, 45, 52, 57, 52, 69, 57, 60, 60, 64, 69, 64, 69, 71, 40, 40, 52, 52, 56, 71, 64, 56, 72, 64, 71, 72, 71, 69, 45, 45, 45, 45, 45, 45, 45, 69, 45, 45, 45, 45, 45, 73, 70, 67, 64, 45, 45, 45, 45, 64, 45, 67, 45, 70, 45, 45, 73, 45, 45, 45, 45, 74, 65, 69, 45, 45, 45, 45, 65, 69, 74, 45, 45, 45, 45, 76, 73, 45, 45, 73, 76, 77, 74, 45, 45, 74, 77, 74, 77, 45, 68, 45, 45, 45, 45, 68, 74, 77, 45, 45, 45, 45, 68, 74, 77, 45, 74, 68, 45, 77, 45, 72, 76, 69, 45, 45, 45, 45, 45, 45, 45, 45, 45, 76, 72, 69, 45, 45, 45, 65, 74, 38, 45, 45, 38, 45, 38, 38, 45, 38, 45, 45, 38, 45, 38, 38, 45, 74, 65, 38, 72, 64, 45, 38, 45, 62, 71, 45, 38, 45, 38, 64, 72, 60, 66, 69, 45, 39, 62, 71, 39, 45, 45, 39, 39, 45, 66, 60, 69, 39, 45, 39, 45, 39, 45, 39, 45, 69, 60, 45, 39, 39, 45, 39, 45, 60, 69, 39, 45, 60, 45, 40, 69, 40, 45, 45, 40, 40, 45, 72, 64, 45, 40, 69, 60, 40, 45, 40, 45, 45, 40, 62, 71, 44, 40, 72, 44, 40, 64, 44, 40, 44, 40, 71, 45, 62, 69, 60, 33, 45, 33, 45, 45, 45, 45, 45, 45, 69, 60, 45, 45, 45, 45, 73, 64, 67, 70, 45, 45, 45, 45, 45, 45, 45, 45, 45, 73, 64, 67, 70, 45, 45, 45, 74, 69, 65, 45, 45, 45, 45, 45, 45, 45, 74, 65, 69, 45, 45, 73, 76, 45, 73, 76, 45, 77, 74, 45, 74, 77, 74, 45, 77, 45, 45, 45, 45, 45, 45, 45, 74, 77, 45, 77, 74, 45, 45, 45, 74, 77, 74, 77, 46, 46, 46, 46, 46, 46, 46, 46, 77, 74, 46, 46, 46, 46, 75, 46, 67, 46, 46, 75, 46, 67, 46, 46, 46, 46, 65, 74, 46, 46, 63, 72, 46, 74, 65, 46, 46, 65, 70, 62, 63, 72, 46, 46, 46, 46, 46, 62, 65, 70, 46, 46, 65, 69, 62, 46, 46, 62, 65, 46, 46, 69, 62, 65, 68, 47, 47, 47, 47, 62, 65, 47, 68, 47, 47, 47, 68, 62, 47, 65, 47, 47, 47, 62, 68, 65, 60, 48, 64, 69, 60, 48, 64, 69, 71, 64, 62, 56, 52, 62, 64, 52, 56, 71, 33, 57, 57, 60, 64, 33, 60, 69, 64, 72, 69, 76, 72, 74, 64, 60, 57, 76, 72, 74, 60, 64, 57, 71, 72, 71, 69, 64, 60, 57, 72, 69, 72, 76, 60, 64, 57, 76, 81, 81, 84, 88, 84, 60, 64, 57, 86, 88, 60, 64, 57, 86, 84, 83, 84, 83, 60, 64, 81, 57, 84, 81, 88, 84, 88, 93, 57, 60, 64, 96, 93, 100, 96, 64, 98, 60, 57, 100, 96, 57, 60, 64, 98, 95, 96, 60, 94, 57, 64, 95, 93, 94, 92, 93, 91, 92, 90, 57, 91, 64, 60, 89, 90, 89, 88, 87, 88, 86, 87, 85, 86, 84, 85, 84, 83, 82, 83, 81, 82, 80, 81, 80, 79, 78, 79, 77, 78, 77, 76, 75, 76, 76, 75, 71, 76, 74, 71, 72, 74, 72, 69, 45, 52, 45, 69, 57, 52, 57, 60, 60, 64, 64, 69, 69, 71, 40, 40, 52, 56, 52, 71, 56, 64, 68, 64, 71, 68, 71, 72, 45, 52, 45, 57, 52, 72, 64, 57, 64, 76, 75, 76, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 74, 72, 45, 69, 72, 45, 52, 57, 52, 69, 60, 57, 60, 64, 64, 69, 69, 71, 40, 40, 52, 52, 56, 71, 56, 64, 64, 72, 72, 71, 71, 45, 69, 52, 45, 69, 57, 52, 71, 57, 72, 71, 74, 72, 76, 48, 74, 55, 76, 48, 60, 55, 67, 60, 77, 67, 76, 77, 74, 43, 76, 43, 55, 74, 59, 55, 59, 65, 76, 65, 74, 76, 72, 45, 74, 45, 72, 52, 57, 52, 64, 57, 74, 64, 74, 72, 71, 40, 72, 40, 52, 71, 52, 64, 64, 64, 64, 76, 76, 64, 64, 76, 76, 76, 76, 88, 88, 75, 76, 75, 76, 75, 75, 76, 76, 75, 76, 75, 76, 75, 75, 76, 75, 76, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 72, 74, 69, 45, 72, 52, 69, 45, 52, 57, 60, 57, 60, 64, 64, 69, 71, 40, 69, 40, 52, 56, 52, 71, 64, 56, 68, 64, 71, 68, 72, 45, 71, 52, 45, 72, 57, 52, 64, 57, 64, 76, 75, 76, 76, 75, 75, 76, 76, 75, 71, 76, 74, 71, 72, 74, 69, 45, 72, 45, 52, 69, 57, 52, 60, 57, 64, 60, 64, 69, 69, 40, 71, 40, 52, 52, 71, 56, 56, 62, 72, 71, 62, 72, 69, 60, 45, 33, 71, 60, 69, 33, 45]
intercepts = list()
interceptsS = list()
def cal_average(num):
    sum_num = 0
    for t in num:
        sum_num = sum_num + t           

    avg = sum_num / len(num)
    return avg
y = list()
index=0
x=[]
predData = [0,1]
predDataSpeed = [0,1]

for nt in data:
    cPred = list()
    index+=1
    y.append(nt)
    xd = list(range(0, len(y)))
    x = np.array(xd).reshape(-1, 1)
    model = LinearRegression()
    model.fit(x, y)
    model = LinearRegression().fit(x, y)
    #r_sq = model.score(x, y)
    intercepts.append(model.intercept_)
    y_pred = model.predict(x)
    cPred=round(cal_average(y_pred), 0)
    #print(f"AVG:{cPred}")
    #print(f"last: {predData[-1]}")
    if predData[-1] != cPred:
        predData.append(cPred)
    else:
        continue

    #print(f"B: {model.intercept_}")

for nt in dur:
    cPredS = list()
    index+=1
    y.append(nt)
    xd = list(range(0, len(y)))
    x = np.array(xd).reshape(-1, 1)
    model = LinearRegression()
    model.fit(x, y)
    model = LinearRegression().fit(x, y)
    #r_sq = model.score(x, y)
    interceptsS.append(model.intercept_)
    y_pred = model.predict(x)
    cPredS=round(cal_average(y_pred), 0)
    #print(f"AVG:{cPred}")
    print(f"last: {predDataSpeed[-1]}")
    if predDataSpeed[-1] != cPredS:
        predDataSpeed.append(cPredS)
    else:
        continue

    #print(f"B: {model.intercept_}")


mf = MIDIFile(1)  
track = 0   
time = 0    
mf.addTrackName(track, time, "Music machine learning")
mf.addTempo(track, time, 150)
channel = 0
volume = 100
def appendS(pt,t,d):
    pitch = pt           # tn
    time = t             # bt start
    duration = d         # length of beat
    mf.addNote(track, channel, pitch, time, duration, volume)
pp = 67
ch = 0
rd = 200
rd = int(rd)
pos = 0
for note in predData:
    pos+=1
    note = round(note, 0)
    print(f"{pos},{note},{dur[pos]}")    
    appendS(int(note), int(pos), dur[pos]+1)

with open(f"{mat}-Developed.mid", 'wb') as outf:
    print(mf)
    mf.writeFile(outf)
# generate 2d classification dataset
X, Y = x, data
# scatter plot, dots colored by class value
df = DataFrame(data)
pyplot.style.use('fivethirtyeight')
pyplot.plot(data)
pyplot.plot(intercepts,"red")
pyplot.plot(predData, "green")
pyplot.show()
print(predData)